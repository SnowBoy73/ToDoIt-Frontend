pipeline
{
    agent any
    triggers
    {
         pollSCM("H/5 * * * *")
    } //poll every 5 min
    stages
    {
       stage("Selenium grid setup")
       {
           steps
           {
               sh "docker-compose -f selenium.yml up -d"
               //sh "docker network create SE"
               //sh "docker run -d --rm -p 4444:4444 --net=SE --name selenium-hub selenium/hub"
               //sh "docker run -d --rm --net=SE -e HUB_HOST=selenium-hub --name selenium-node-firefox"
               //sh "docker run -d --rm --net=SE -e HUB_HOST=selenium-hub --name selenium-node-chrome"
               //sh "docker run -d --rm --net=SE --name app-test-container nadiamiteva/frontend-calc"
           }
       }
       stage("Execute system tests")
       {
           steps
           {
               sleep time:15, unit:"SECONDS"
               sh "selenium-side-runner-server http://localhost:4444/wd/hub -c 'browserName=firefox' --base-url http://app-host/ test/system/FunctionalTests.side"
               sh "selenium-side-runner-server http://localhost:4444/wd/hub -c 'browserName=chrome' --base-url http://app-host/ test/system/FunctionalTests.side"
           }
       }
    }
    post
    {
        cleanup
        {
            echo "Cleaning the Docker environment"
            sh script: "docker-compose -f selenium.yml down", returnStatus:true
            //sh script:"docker stop selenium-hub", returnStatus:true
            //sh script:"docker stop selenium-node-firefox", returnStatus:true
            //sh script:"docker stop selenium-node-chrome", returnStatus:true
            //sh script:"docker stop app-test-container", returnStatus:true
            //sh script:"docker network remove SE", returnStatus:true
        }
    }
}
